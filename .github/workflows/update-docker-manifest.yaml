name: update-docker-manifest

on:
  schedule:
    - cron: 0 0 * * *
  workflow_dispatch:

jobs:
  update-docker-manifest:
    runs-on: ubuntu-latest
    env:
      PACKAGE_NAME: autoware-universe
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Create Docker manifest
        run: |
          package_full_name=ghcr.io/${{ github.repository_owner }}/${{ env.PACKAGE_NAME }}

          base_url="https://api.github.com/orgs/${{ github.repository_owner }}/packages/container/${{ env.PACKAGE_NAME }}/versions"
          echo "base_url: $base_url"

          tags=()
          for page in $(seq 1 10); do
            page_url="${base_url}?page=$page"
            echo -e "\npage_url: $page_url"

            page_tags=$(curl -fsSL "$page_url" -H "Authorization: token ${{ github.token }}" | jq ".[].metadata.container.tags[]" | cut -d '"' -f 2)
            echo -e "\n[page_tags]\n$page_tags"

            if [ "$page_tags" = "" ]; then
              echo "No tags found in the page $page."
              break
            fi

            for tag in $(IFS=$'\n'; echo "$page_tags"); do
              tags+=("$tag")
            done
          done

          tags=$(IFS=$'\n'; echo "${tags[*]}")
          echo -e "\n[tags]\n$tags"

          amd64_tags=$(echo "$tags" | grep "\-amd64" | sed "s/-amd64$//g")
          arm64_tags=$(echo "$tags" | grep "\-arm64" | sed "s/-arm64$//g")
          base_tags=$(printf "%s\n" "$amd64_tags" "$arm64_tags" | sort | uniq)

          echo -e "\n[amd64_tags]\n$amd64_tags"
          echo -e "\n[arm64_tags]\n$arm64_tags"
          echo -e "\n[base_tags]\n$base_tags"

          for base_tag in $base_tags; do
            echo -e "\nbase_tag: $base_tag"

            amd64_tag=$(echo "$tags" | grep "$base_tag\-amd64" || true)
            arm64_tag=$(echo "$tags" | grep "$base_tag\-arm64" || true)

            echo "amd64_tag: $amd64_tag"
            echo "arm64_tag: $arm64_tag"

            if [ "$amd64_tag" != "" ]; then
              amd64_image_name="$package_full_name:$amd64_tag"
            else
              echo "No amd64 tag found for '$base_tag'."
              amd64_image_name=""
            fi

            if [ "$arm64_tag" != "" ]; then
              arm64_image_name="$package_full_name:$arm64_tag"
            else
              echo "No arm64 tag found for '$base_tag'."
              arm64_image_name=""
            fi

            echo "amd64_image_name: $amd64_image_name"
            echo "arm64_image_name: $arm64_image_name"

            docker manifest create $package_full_name:$base_tag \
              $amd64_image_name \
              $arm64_image_name

            docker manifest push $package_full_name:$base_tag
          done
